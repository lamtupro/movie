import MovieSection from '@/src/components/MovieSection'
import { generateSeoMetadata } from '@/src/lib/seo';

export async function generateMetadata({ searchParams }: { searchParams: { page?: string } }) {
  const resolvedParams = await searchParams;
  const page = parseInt(resolvedParams.page || "1", 10);
  const canonical =
    page > 1
      ? `https://quoclamtu.live/phim-hay?page=${page}`
      : `https://quoclamtu.live/phim-hay`;

  return generateSeoMetadata({
    title: 'Top 100 phim sex hay nh·∫•t | Xem phim hot mi·ªÖn ph√≠ ch·∫•t l∆∞·ª£ng cao',
    description: 'T·ªïng h·ª£p 100 b·ªô phim sex hay nh·∫•t ƒë∆∞·ª£c xem nhi·ªÅu nh·∫•t, c·∫≠p nh·∫≠t li√™n t·ª•c. Xem phim sex HD mi·ªÖn ph√≠ nhanh, m∆∞·ª£t t·∫°i quoclamtu.live .',
    keywords: ["Top phim sex hay 2025", "xem phim hay buomxinh", "phim sex hay vietnam", "T·ªïng h·ª£p sex hay nh·∫•t"],
    canonical,
    page,
  });
}

const pageSize = 20; // S·ªë phim m·ªói trang
const maxPages = 5; // Ch·ªâ l·∫•y t·ªëi ƒëa 5 trang => 100 phim

const getMovies = async (page: number) => {
  // Gi·ªõi h·∫°n s·ªë trang t·ªëi ƒëa
  if (page > maxPages) {
    return { movies: [], total: pageSize * maxPages };
  }

  try {
    const res = await fetch(
      `${process.env.STRAPI_API_URL}/api/movies?populate=*&sort=views:desc&pagination[page]=${page}&pagination[pageSize]=${pageSize}`,
      {
        headers: {
          Authorization: `Bearer ${process.env.STRAPI_API_TOKEN}`,
        },
        next: { revalidate: 3600 },
      }
    );

    if (!res.ok) throw new Error('Fetch failed');

    const data = await res.json();
    return {
      movies: data.data || [],
      total: Math.min(data.meta?.pagination?.total || 0, pageSize * maxPages), // gi·ªõi h·∫°n t·ªëi ƒëa 100 phim
    };
  } catch (err) {
    console.error('‚ùå L·ªói fetch phim hay:', err);
    return { movies: [], total: 0 };
  }
};

export default async function PhimHayPage({
  searchParams,
}: {
  searchParams: Promise<{ page?: string }>;
}) {
  const searchParamsResolved = await searchParams;
  const currentPage = Math.min(parseInt(searchParamsResolved.page || '1', 10) || 1, maxPages); // kh√¥ng cho v∆∞·ª£t trang 5

  const { movies, total } = await getMovies(currentPage);
  const totalPages = Math.ceil(total / pageSize);

  if (!movies || movies.length === 0) {
    return (
      <p className="text-white text-center py-10 text-xl">
        Kh√¥ng t√¨m th·∫•y trang ho·∫∑c d·ªØ li·ªáu kh√¥ng t·ªìn t·∫°i üò¢
      </p>
    );
  }

  return (
    <MovieSection
      title="Top 100 Phim Sex Hay Theo L∆∞·ª£t Xem"
      movies={movies}
      currentPage={currentPage}
      totalPages={totalPages}
      basePath="/phim-hay"
    />
  );
}


